library("tidyverse")
install.packages("readxl")
x <- c("a","s","d","f")
x[1]
x[1,3]
x[c(1)]
x[c(1,3)]
getwd()
Tesla <- readcsv("Data/TSLA.csv")
Tesla <- read.csv("Data/TSLA.csv")
View(Tesla)
library(dplyr)
Tesla %>%
head()
head(Tesla)
summary(head(Testla,15))
summary(head(Tesla,15))
Tesla %>%
head(15) %>%
summary()
Tesla %>%
str()
Tesla$Volume <- as.numeric(Tesla$Volume)
Tesla %>%
colnames()
library(tidyr)
Tesla <- separate(Tesla, Date, c("Year", "Month", "Day"), sep="-")
Tesla_Year <- Tesla %>%
group_by(Year) %>%
summarize_if(is.numeric, mean)
View(Tesla_Year)
Tesla_Year2 <- Tesla %>%
group_by(Year) %>%
summarize_if(is.numeric, c(mean,sd))
View(Tesla_Year2)
Tesla_Year2 <- Tesla %>%
group_by(Year) %>%
summarize_if(is.numeric, fun=c(mean,sd))
Tesla_Year2 <- Tesla %>%
group_by(Year) %>%
summarize_if(is.numeric, funs=c(mean,sd))
#no pipe way
Tesla_Group <- group_by(Tesla,Year)
Tesla_Year2 <- summarize_if(Tesla_Group,is.numeric,mean)
View(Tesla_Year2)
arrange(Tesla_Year,Open)
Tesla_Year <- arrange(Tesla_Year,Open)
Tesla_Year <- arrange(Tesla_Year,Year)
Tesla <- mutate(Tesla, Season = case_when(Month == "01"|Month == "02"|Month == "03" ~ "Winter",Month == "04"|Month == "05"|Month == "06" ~ "Spring",Month == "07"|Month == "08"|Month == "09" ~ "Summer",Month == "10"|Month == "11"|Month == "12" ~ "Fall", TRUE ~ NA))
Tesla <- mutate(Tesla, Season = case_when(Month == "01"|Month == "02"|Month == "03" ~ "Winter",Month == "04"|Month == "05"|Month == "06" ~ "Spring",Month == "07"|Month == "08"|Month == "09" ~ "Summer",Month == "10"|Month == "11"|Month == "12" ~ "Fall", TRUE ~ "NA")
Tesla <- mutate(Tesla, Season = case_when(Month == "01"|Month == "02"|Month == "03" ~ "Winter",Month == "04"|Month == "05"|Month == "06" ~ "Spring",Month == "07"|Month == "08"|Month == "09" ~ "Summer",Month == "10"|Month == "11"|Month == "12" ~ "Fall", TRUE ~ "NA"))
Tesla <- mutate(Tesla, Season = case_when(Month == "01"|Month == "02"|Month == "03" ~ "Winter",Month == "04"|Month == "05"|Month == "06" ~ "Spring",Month == "07"|Month == "08"|Month == "09" ~ "Summer",Month == "10"|Month == "11"|Month == "12" ~ "Fall", TRUE ~ "NA"))
Tesla_Season <- Tesla %>%
group_by(Season) %>%
summarize_if(is.numeric,mean)
View(Tesla_Season)
Tesla_Season <- Tesla %>%
group_by(Season) %>%
summarize_if(is.numeric,mean) %>%
arrange(desc(Open))
View(Tesla_Season)
install.packages("esquisse")
esquisse:::esquisser()
Tesla2 <- read.csv("Data/TSLA.csv")
esquisse:::esquisser()
View(Tesla_Year2)
View(Tesla2)
View(Tesla_Year)
View(Tesla2)
esquisse:::esquisser()
# Create a data frame called "price"
price <- data.frame("Food" = c("Burger","Hot Dog","Curry"),
"Location" = c("Van","Van","Restaurant"),
"Price" = c("$3.00", "$2.00", "$12.00"),
stringsAsFactors=FALSE)
# Create a data frame called "calories"
calories <- data.frame("Food" = c("Burger","Hot Dog","Chips"),
"Type" = c("Main","Main","Side"),
"Calories" = c(200, 150, 120),
stringsAsFactors=FALSE)
View(Tesla)
library(dplyr)
Joined_data <- left_join(price, calories, by = "Food")
View(calories)
View(Joined_data)
Joined_data_right <- right_join(price, calories, by = "Food")
View(Joined_data_right)
Joined_data_inner <- inner_join(price, calories, by = "Food")
View(Joined_data_inner)
Joined_data_full <- full_join(price, calories, by = "Food")
View(Joined_data_full)
Joined_data_semi <- semi_join(price, calories, by = "Food")
Joined_data_anti <- anti_join(price, calories, by = "Food")
View(Joined_data_anti)
View(Joined_data_semi)
class(price)
grades <- read.csv("Data/grades.csv")
houses <- read.csv("Data/houses.csv")
View(grades)
grades_houses <- full_join(grades,houses,by = "student")
View(houses)
View(grades_houses)
grades_houses2 <- left_join(grades,houses,by = "student")
View(grades_houses2)
grades_houses3 <- inner_join(grades,houses,by = "student")
View(grades_houses3)
install.packages(c("backports", "boot", "broom", "class", "dbplyr", "dplyr", "ellipsis", "fs", "ggplot2", "glue", "haven", "htmltools", "httpuv", "isoband", "jsonlite", "KernSmooth", "knitr", "later", "lattice", "lubridate", "MASS", "modelr", "nlme", "nnet", "openssl", "pillar", "pkgbuild", "pkgload", "processx", "promises", "ps", "purrr", "Rcpp", "reshape2", "rlang", "rmarkdown", "scales", "shiny", "shinyWidgets", "spatial", "survival", "tibble", "tidyr", "tidyselect", "tinytex", "vctrs", "withr", "xfun", "xml2"))
biocLite()
source("http://bioconductor.org/biocLite.R")
BiocManager()
source("http://bioconductor.org/biocManager.R")
install.packages("BiocManager")
install.packages("devtools")
